MIN_LENGTH = 1
MAX_LENGTH = 256
DEPART_LENGTH = 64
NAME_LENGTH = 128
PHONE_LENGTH = 16

DEFAULT_MIN_BYTES = 20
DEFAULT_MAX_BYTES = 40
DEFAULT_MIN = 0
DEFAULT_MAX = 41



////////////////////////////
//-------ENTITY-------------//
///////////////////////////
/*
* Company-thong tin cong ty entity
*/
entity Company{
    companyName String required maxlength(NAME_LENGTH),
    companyPhone String maxlength(PHONE_LENGTH),
    companyAddress String,
    companyLogo ImageBlob,
    companyWebsite String,
    companyFacebook String,
    companyTwitter String,
    companyInstagram String,
    companyLinkedin String,
    companyGooglePlus String,
    companyYoutube String,
    companyDescription TextBlob
}

/*
* JobTitle - chuc vu entity
*/
entity JobTitle{
    titleName String required maxlength(NAME_LENGTH),
    salaryFactor Double min(1)
}

/*
* Exchanger - san giao dich entity
*/
entity Exchanger{
    exchangerName String required maxlength(NAME_LENGTH),
    exchangerAddress String maxlength(MAX_LENGTH),
    exchangerPhone String required maxlength(PHONE_LENGTH),
    exchangerAvatarUrl String
}

/*
* Department - Phong ban entity
*/
entity Department{
    departmentName String required maxlength(NAME_LENGTH),
    departmentAvatarUrl String,
    departmentPhone String maxlength(PHONE_LENGTH)
}

/*
* Investor - chu dau tu entity
*/
entity Investor {
    investorName String required maxlength(NAME_LENGTH),
    investorTitle String maxlength(MAX_LENGTH),
    investorDate LocalDate,
    investorDescription String maxlength(MAX_LENGTH),
    investorAddress String maxlength(MAX_LENGTH),
    investorWebsite String,
    investorPhone String maxlength(PHONE_LENGTH),
    investorAvatarUrl String
}

/*
* Contractor - nha thau entity
*/
entity Contractor{
    contractorName String required maxlength(NAME_LENGTH),
    contractorTitle String maxlength(MAX_LENGTH),
    contractorDate LocalDate,
    contractorDescription String,
    contractorAddress String,
    contractorWebsite String,
    contractorPhone String maxlength(PHONE_LENGTH),
    contractorAvatarUrl String
}

/*
* Document - Tai lieu du an entity
*/
entity Document {
    documentName String required maxlength(MAX_LENGTH),
    documentUrl String required,
    documentDate Instant,
    documentMimeType String,
    documentSize String,
    resourceType ResourceType,
    resourceId Long

}

/*
* Photo - Hinh anh entity
*/
entity Photo{
    photoName String required maxlength(MAX_LENGTH),
    photoDate Instant,
    photoUrl String,
    photoMimeType String,
    resourceId Long,
    resourceType ResourceType,
    photoSize Integer,
    photoAltText String,
    photoThumbnailUrl String
}

/*
* Location - vi tri entity
*/
entity Location{
    locationName String,
    locationFullAddress String maxlength(MAX_LENGTH),
    locationNumber String,
    locationRoad String,
    locationWard String,
    locationDistrict String,
    locationProvince String,
    locationGmapUrl String,
    longitude Double required,
    latitude Double required,
    locationZipCode String maxlength(PHONE_LENGTH)
    //locationHide Boolean
}

/*
* BuildingType - Loai hinh du an entity
*/
entity BuildingType{
    typeName String required maxlength(NAME_LENGTH)
}

/*
* Category - danh muc bai viet entity
*/
entity Category{
    categoryName String required maxlength(NAME_LENGTH),
    categoryAlias String,
    categoryDate Instant
}

/*
* Tag - the entity
*/
entity Tag{
    tagName String required maxlength(NAME_LENGTH)
}

/*
* Notification - entity
*/
entity Notification {
    notificationTitle String required maxlength(NAME_LENGTH),
    notificationContent TextBlob,
    notificationSeen Boolean,
    notificationDate Instant,
    notificationType NotificationType,
    //notificationReference String // property code
    notificationSender Long 
}

/*
* SupportCategory entity 
*/
entity SupportCategory{
    categoryName String required maxlength(NAME_LENGTH),
    categoryDescription	String,
    categorySupportType SupportType
}

/*
* Contact - chi tiet lien he entity
*/
entity Contact{
    contactName String required maxlength(NAME_LENGTH),
    contactPhone String required maxlength(PHONE_LENGTH),
    contactAddress String,
    contactWebsite String,
    contactAvatarUrl String,
    contactFacebook String,
    contactTwitter String,
    contactInstagram String,
    contactLinkedin String,
    contactGooglePlus String,
    contactYoutube String,
    contactStatus Boolean 
}
relationship ManyToOne{
    Contact{user} to User
}

/*
* UserNotification entity
*/

entity UserNotification{
    isSeen Boolean,
    seenDate Instant
}
relationship ManyToOne{
    UserNotification{notification(notificationTitle)} to Notification,
    UserNotification{receiver(login)} to User
}

/*
* Article entity
*/
entity Article{
    articleTitle String required maxlength(NAME_LENGTH),
    articleStatus BlogStatus,
    articleDate	Instant,
    articleSeenCount Long,
    articleContent TextBlob
}

relationship ManyToOne{
    Article{author(login)} to User,
    Article{category(categoryName)} to SupportCategory
}

/*
* Employee - entity
*/
entity Employee{
    //employeeName String required,
    employeeFirstName String required maxlength(NAME_LENGTH),
    employeeLastName String required maxlength(NAME_LENGTH),
    employeeDob LocalDate,
    employeeSex Gender,
    employeeIdentityCard String maxlength(PHONE_LENGTH),
    employeePhone String required maxlength(PHONE_LENGTH),
    employeeEmail String required
    //employeeAvatar ImageBlob,
    //employeeFacebook String,
    //employeeLinkedin String,
    //employeeInstagram String,
    //employeeGooglePlus String,
    //employeeZalo String,
    //employeeTwitter String,
    //employeeYoutube String
}
relationship ManyToOne{
    Employee{department(departmentName)} to Department,
    Employee{jobtitle(titleName)} to JobTitle
}
relationship OneToOne{
    Employee{account(login)} to User
}

/*
* ResidentialArea entity
*/
entity ResidentialArea{
    residentialName String required maxlength(NAME_LENGTH),
    residentialAlias String required,
    residentialDescription TextBlob,
    residentialDetail TextBlob,
    residentialProvince String,
    residentialDistrict String,
    residentialBoundary TextBlob,
    //residentialImage ImageBlob,
    residentialAvatar String
}
relationship ManyToMany{
    ResidentialArea{tag(tagName)} to Tag
}

/*
* Project entity
*/
entity Project{
    projectName String required maxlength(NAME_LENGTH),
    projectAlias String maxlength(NAME_LENGTH),
    projectAvatarUrl String,
    projectDistrict String maxlength(DEPART_LENGTH),
    projectProvince String maxlength(DEPART_LENGTH),
    residentialAreaId Long,
    projectRoad String maxlength(NAME_LENGTH),
    projectWard String maxlength(DEPART_LENGTH),
    projectStatus TransactionStatus,
    //projectType String,
    projectNoBlocks Integer required,
    projectNoFloors Integer required,
    projectNoApartments Integer required,
    projectNoShophouse Integer,
    projectDescription TextBlob,
    projectMinSellPrice Double min(0),
    projectMaxSellPrice Double,
    //projectSellAreaUnit AreaUnit,
    projectSellPriceUnit PriceUnit,
    projectMinRentPrice Double min(0),
    projectMaxRentPrice Double,
    //projectRentAreaUnit AreaUnit,
    projectRentPriceUnit PriceUnit,
    projectStartedDate LocalDate,
    projectFinishingDate LocalDate,
    projectMinApartmentSquare Integer min(1),
    projectMaxApartmentSquare Integer,
    projectGreenSpace Integer min(0) max(100),
    projectBuildingDensity Integer min(0) max(100),
    projectDesignCompany String,
    projectCarPark Boolean,
    projectBbqCourt Boolean,
    projectElevator Boolean,
    projectShoppingCenter Boolean,
    projectSwimmingPool Boolean,
    projectCommunityRoom Boolean,
    projectGym Boolean,
    projectCityPark Boolean,
    projectGuard Boolean,
    projectPlayGround Boolean,
    longitude Double,
    latitude Double,
    projectSeenCount Long,
    projectAvailable Boolean
}
relationship ManyToMany{
    Project{tag(tagName)} to Tag,
    Project{buildingtype(typeName)} to BuildingType,
    Project{inverstor(investorName)} to Investor,
    Project{contractor(contractorName)} to Contractor
}
relationship OneToOne{
    Project{location} to Location,
    Project{consultant(login)} to User
}

/*
* Property entity
*/
entity Property{
    propertyCode  String required maxlength(PHONE_LENGTH),
    propertyName String required maxlength(NAME_LENGTH),
    propertyAlias String maxlength(NAME_LENGTH),
    propertyTransaction TransactionType,
    propertyNumber String maxlength(DEPART_LENGTH),
    propertyRoad String maxlength(DEPART_LENGTH),
    propertyWard String maxlength(DEPART_LENGTH),
    propertyDistrict String maxlength(DEPART_LENGTH),
    propertyProvince String maxlength(DEPART_LENGTH),
    propertyDescription TextBlob,
    propertyBedRooms Integer min(0),
    propertyBathRooms Integer min(0),
    propertySquare Double min(0),
    propertyUsePurpose UseEstablishment,
    propertyOwnerType String,
    propertyTower String,
    propertyRentPrice Double,
    propertyRentUnit PriceUnit,
    propertyRentStartedDate LocalDate,
    propertySellPrice Double,
    propertySellUnit PriceUnit,
    propertySellStartedDate LocalDate,
    propertySofa Boolean,
    propertyDiningTable Boolean,
    propertyKitchen Boolean,
    propertyCabinetKitchen Boolean,
    propertyKitchenEquipment Boolean,
    propertyWardrobe Boolean,
    propertyMakeupTable Boolean,
    propertyDesk Boolean,
    propertyTivi Boolean,
    propertyWashingMachine Boolean,
    propertyMicrowave Boolean,
    propertyWaterHeater Boolean,
    propertyBed Boolean,
    propertyHeater Boolean,
    propertyAudioEquipment Boolean,
    propertyInternet Boolean,
    propertyCableTivi Boolean,
    propertyPetPermission Boolean,
    propertyElevator Boolean,
    propertySwimmingPool Boolean,
    propertyGym Boolean,
    propertyFunctionalArea Boolean,
    propertyOpen24h Boolean,
    propertyCarPark Boolean,
    propertyBalcony Boolean,
    propertySauna Boolean,
    propertySteamSauna Boolean,
    propertyAttraction Boolean,
    propertySpecialFeature String,
    propertyFurnitureOverview String,
    propertyLocationOverview String,
    propertyResidentialCommunity String,
    propertyEducationalAspect String,
    propertyExtraInfo String,
    propertyDraftUrl String,
    longitude Double min(0),
    latitude Double min(0),
    propertyGoodPrice Boolean,
    propertySeenCount Long,
    propertyIsSold Boolean,
    propertyIsRent Boolean,
    propertyAvailable Boolean,
    propertyRefrigerator Boolean,
    propertyAirconditioner Boolean

}
relationship OneToOne{
    Property{location} to Location,
    Property{consultant(login)} to User
}
relationship ManyToMany{
    Property{tag(tagName)} to Tag
}
/*
* FavouriteItem entity
*/
entity FavouriteItem{
    favourited Boolean,
    resourceId Long,
    resourceType ResourceType
}
relationship ManyToOne{
    FavouriteItem{user(login)} to User
}
/*
* BlogPost entity
*/
entity BlogPost{
    postTitle String required maxlength(MAX_LENGTH),
    postStatus BlogStatus,
    postCreatedDate Instant,
    //postPublishDate Instant,
    //postUpdateDate Instant,
    postSeenCount Long,
    postContent TextBlob
}
relationship ManyToOne{
    BlogPost{category(categoryName)} to Category,
    BlogPost{user(login)} to User
}

/*
* RecruitmentInfo entity
*/
entity RecruitmentInfo{
    recruitmentTitle String required maxlength(NAME_LENGTH),
    recruitmentAvatarUrl String,
    recruitmentContent TextBlob,
    recruitmentNotes String,
    recruitmentDate LocalDate,
    recruitmentSeenCount Long,
    recruitmentStatus Boolean
}
relationship ManyToOne{
    RecruitmentInfo{user(login)} to User,
    RecruitmentInfo{jobtitle(titleName)} to JobTitle
}
/*
* Request entity
*/
entity Request{
    requestFirstName String required maxlength(NAME_LENGTH),
    requestLastName String required maxlength(NAME_LENGTH),
    requestEmail String required,
    requestPhone String required maxlength(PHONE_LENGTH),
    requestGetAnalysis Boolean,
    requestGetPrice Boolean,
    requestPageUrl String,
    //requestPageName String,
    resourceId Long,
    resourceType ResourceType,
    requestType RequestType,
    requestMeetingDate LocalDate,
    requestQuestion String,
    requestPrice Double min(0)
    //requestCreatedDate ZonedDateTime,
    //requestConsultantId Integer
}
relationship ManyToOne{
    Request{sender(login)} to User,
    Request{receiver(login)} to User
}

/*
* Comment entity
*/
entity Comment{
   // commentTitle String required,
    commentContent String,
    commentTimeStamp Instant
    //commentUpdateDate Instant
}
relationship ManyToOne{
    Comment {user(login)} to User,
    Comment {post(postTitle)} to BlogPost
}
/*
*

entity ProjectUser{
    liked Boolean,
    shared Boolean,
    likedDate Instant,
    sharedDate Instant
}


*

entity PropertyUser{
    liked Boolean,
    shared Boolean,
    likedDate Instant,
    sharedDate Instant
}
*/
////////////////////////////
//-------ENUM-------------//
///////////////////////////
/*
* Direction enum
*/
enum Direction{
    EAST,
    WEST,
    NORTH,
    SOUTH,
    NORTHEAST,
    NORTHWEST,
    SOUTHEAST,
    SOUTHWEST
}

/**
* SupportType enum
*/
enum SupportType{
    ACCOUNT, SELL, RENT, BUY, HOUSE, PROJECT 
}
/*
* TransactionType enum
*/
enum TransactionType{
    SELL, BUY, RENT, SELL_RENT
}

/*
* RequestOrigin enum

enum RequestOrigin{
    ANDROID, IOS, WINDOWS, OTHER
}
*/
/*
* NotificationType enum
*/
enum NotificationType{
    SYSTEM, REQUEST, ALERT
}

/*
* RequestStatus enum

enum RequestStatus{
    OPEN, CLOSED, PENDING
}
*/
/*
* TerrainType enum

enum TerrainType{
 RESIDENTIAL, URBAN, RUSTIC, INDUSTRIAL
}
*/
/*
* ApartmentType enum

enum ApartmentType{
 HOUSES, RURALS, FLATS, APARTMENTS, TOWERS, LOFTS
}
*/
/*
* BusinessType enum

enum BusinessType{
 PUB, HOTEL, OTHERS
}
*/
/*
* UseEstablishment enum
*/
enum UseEstablishment{
 LODGE, PUB, SHOP, RESTAURANT, HOTEL, LEASE, SHOPHOUSE, CITIHOUSE, OFFICE, LAND, OFFICETEL, OTHER
}

/*
* TransactionStatus enum
*/
enum TransactionStatus{
 SELLING, PRESELL, CLOSED
}

/*
* Gender enum
*/
enum Gender{
 MALE, FEMALE, OTHER
}

/*
* PriceUnit enum
*/
enum PriceUnit{
 THOUSAND, MILLION, BILLION
}

/*
* AreaUnit enum

enum AreaUnit{
 M2, CAN, MONTH, YEAR
}
*/
/*
* ResourceType enum
*/
enum ResourceType{
 PROJECT, PROPERTY, EMPLOYEE, RESIDENTIAL_AREA
}

/*
* PropertyType enum

enum PropertyType{
 PROJECT, PROPERTY, LAND
}
*/
/*
* BlogStatus enum
*/
enum BlogStatus{
 PUBLISHED, DRAFT, DELETED
}

/*
* RequestType enum
*/
enum RequestType{
 MEETING, PRICE, QUESTION,OTHER
}


//Pagination options
paginate Employee, Location, Notification, Project, Property, BlogPost, Request, Article with infinite-scroll

paginate Company, Contact, JobTitle, Department, Investor, Contractor, Category, ResidentialArea,  RecruitmentInfo with pagination

// Using mapper
dto * with mapstruct

// service
service all with serviceImpl except BuildingType, Company

// Filtering
filter Property, Location, Project, ResidentialArea, BlogPost, Employee,  Article

